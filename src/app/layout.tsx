import type { Metadata } from "next";
import { Barlow } from "next/font/google";
import "./globals.css";
import { cn } from "@/lib/utils";
import { Anton } from "next/font/google"
import Link from "next/link";
import { CheckSquare } from "lucide-react";
import SearchBox from "@/components/SearchBox";
import { Toast, ToastProvider } from "@/components/ui/toast";
import { Toaster } from "@/components/ui/toaster";
import SideBar from "@/components/SideBar";

const anton = Anton({
    subsets: ["latin"],
    weight: ["400"],
})

const barlow = Barlow({
  subsets: ["latin"],
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={cn(barlow.className, 'grainy')}>
        <Toaster />
        <div className="bg-gray-100 grid grid-cols-10 space-x-0 space-y-0 grid-rows-[auto,1fr] min-h-screen">
          <div className="row-start-1 col-span-2 p-4 border-r border-b border-zinc-300">
              <Link href="/" className={cn(anton.className, '')}>
                  <CheckSquare className="w-6 h-6 mr-2 inline -mt-2" />
                  <span className="relative text-2xl leading-none
                  after:w-full after:h-1 after:bg-black after:absolute after:left-0 after:bottom-[calc(50%-0.2rem)]
                  after:opacity-0 after:hover:opacity-100 after:-translate-x-1/2 after:hover:translate-x-0 after:transition-all after:duration-500">
                      ToDone.
                  </span>
              </Link>
          </div>
          <div className="col-span-8 border-b border-zinc-300
          flex items-center justify-left px-8">
            <SearchBox /> 
          </div>
          <div className="col-span-2 border-r border-zinc-300">
            <SideBar />
          </div>
          <div className="col-span-8 bg-white/70">
            {children}
          </div>
        </div>
      </body>
    </html>
  );
}
